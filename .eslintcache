[{"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\Decagon_Tasks\\announcement\\src\\index.js":"1","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\Decagon_Tasks\\announcement\\src\\reportWebVitals.js":"2","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\Decagon_Tasks\\announcement\\src\\App.js":"3","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\index.js":"4","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\App.js":"5","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\reportWebVitals.js":"6","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\upcoming.js":"7","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\sample.js":"8","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\Tab.js":"9","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\baseUrl.js":"10"},{"size":591,"mtime":1612355399237,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1893,"mtime":1612362091012,"results":"14","hashOfConfig":"12"},{"size":591,"mtime":1612355399237,"results":"15","hashOfConfig":"16"},{"size":12450,"mtime":1613513123209,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":861,"mtime":1613509328889,"results":"19","hashOfConfig":"16"},{"size":1017,"mtime":1613511438110,"results":"20","hashOfConfig":"16"},{"size":304,"mtime":1613229247524,"results":"21","hashOfConfig":"16"},{"size":46,"mtime":1612713939408,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2uf5ga",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1nmet4d",{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\Decagon_Tasks\\announcement\\src\\index.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\Decagon_Tasks\\announcement\\src\\reportWebVitals.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\Decagon_Tasks\\announcement\\src\\App.js",["46"],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\index.js",[],["47","48"],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\App.js",["49","50","51","52","53","54","55"],"import React from 'react';\nimport './App.css';\nimport { Nav, Navbar, NavbarToggler, Collapse, NavItem, Jumbotron,Modal,Input,Label,Button,Col } from 'reactstrap';\nimport {sample} from './sample';\nimport Upcoming from './upcoming';\nimport Tab from './Tab';\nimport {baseUrl} from './baseUrl';\nimport Interface from './images/interface.png';\nimport people from './images/people.png';\nimport social from './images/social.png';\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n  constructor (props){\n    super(props);\n    this.state={\n      isNavOpen:false,\n      newDate:new Date(),\n      editAnnouncements:null,\n      editAnnouncementsText:'',\n      datas:[],\n      selected:'Upcoming',\n      search:'',\n      Deliver:'Deliver',\n      Priority:'Priority',\n      Notification_Method:'Notification Method',\n      Announcements:'',\n      Date: '',\n      sample:sample\n    }\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n  // componentDidMount(){\n  //   fetch(baseUrl+'announcements')\n  //     .then(response => response.json())\n  //     .then(data => this.setState({datas:data}))\n  // }\n  deleteAnnouncement=(id)=>{\n    const newAnnouncements=this.state.sample.filter(el=>{\n      if(el.Announcements!==id.Announcements){\n        return el!==id\n      }\n    })\n    this.setState({\n      sample:[...newAnnouncements]\n    })\n  }\n  setSelected=(tab)=>{\n    this.setState({selected:tab});\n  }\n  setEditAnnouncements=(id)=>{\n    this.setState({editAnnouncements:id})\n  }\n  setEditAnnouncementsText=(id)=>{\n    const updatedAnnouncement=[...this.state.sample].map((el)=>{\n      if(el.id===id){\n        el.Announcements=this.state.editAnnouncementsText\n      }\n      return sample\n    })\n    this.setState({\n      [this.state.sample.Announcements]:updatedAnnouncement,\n      editAnnouncements:null\n    })\n  }\n  changeHandler=(e)=>{\n    let dateDay=this.state.newDate.getDate() + \"/\" + parseInt(this.state.newDate.getMonth()+1) + \"/\" + this.state.newDate.getFullYear();\n    this.setState({[e.target.name]:e.target.value})\n    const wht=this.state.datas.map(date=>(date.Date));\n    const first=(this.state.datas.map(date=>(date.Date)))\n    for(const dat of first){\n      console.log(dat)\n      if(dat>dateDay){\n        console.log('ahhh');\n      }\n      else{\n        console.log('fhfhf')\n      }\n    }\n    // console.log(dateDay)\n\n  }\n  changeSearch=(e)=>{\n    this.setState({[e.target.name]:e.target.value})\n  }\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n  \n  clearAll=()=>{\n    this.setState({\n      selected:'Upcoming',\n      search:'',\n      Deliver:'Deliver',\n      Priority:'Priority',\n      Notification_Method:'Notification Method',\n      Announcements:'',\n      Date:\"\",\n    })\n  }\n\n  submitHandler=e=>{\n    e.preventDefault();\n    let myForm=e.target;\n    console.log(this.state.Announcements)\n    if(myForm===''){\n      console.log('hello?')\n    }\n    else{\n      let fd=new FormData(myForm);\n      console.log(fd)\n      for(let key of fd.keys()){\n        console.log(key,fd.get(key))\n      }\n      let json=convertToJson(fd);\n      console.log(json);\n      function convertToJson(formData){\n        let obj ={};\n        for(let key of formData.keys()){\n            obj[key]=formData.get(key);\n        }\n        return obj;\n    }\n    return fetch(baseUrl+'announcements',{\n      method:'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      },\n      credentials: \"same-origin\"\n    })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        console.log(error);\n      }\n    },\n    error => {\n          throw error;\n    })\n  }\n  }\n  render(){\n    const {Date,Deliver,Priority,Notification_Method,Announcements,search}=this.state\n    const filteredSearch=this.state.sample.filter((state)=>((state.Passage.toLowerCase()).includes(this.state.search.toLowerCase())||(state.Priority.toLowerCase().includes(this.state.search.toLowerCase()))))\n    let dateDay=this.state.newDate.getDate() + \"/\" + parseInt(this.state.newDate.getMonth()+1) + \"/\" + this.state.newDate.getFullYear();\n    return (\n      <div className=\"all container\">\n        <form onSubmit={this.submitHandler} style={{fontFamily:'Nunito Sans'}}>\n        <div className=\"row row-header\">\n          <div className=\"announce\">\n            <p className=\"bold\">ANNOUNCEMENTS</p>\n          </div>\n          <React.Fragment>\n            <Navbar dark expand=\"md\">\n              <div className=\"container\">\n                <NavbarToggler onClick={this.toggleNav}/>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                      <Nav navbar>\n                        <div className=\"second-header ml-3\">\n                          <div className=\"people\">\n                            <img src={people} alt=\"people.png\"/>\n                          </div>\n                          <div className=\"owner\">\n                            <p style={{fontWeight:'600', fontSize:'14px'}}>Marina<br/><span style={{fontWeight:'400', fontSize:'14px'}}>Super Administrator</span></p>\n                          </div>\n                          <div>\n                            <div className=\"social\">\n                                <img src={social} alt=\"social.png\"/>\n                                <p>Account Settings</p>\n                            </div>\n                            <div className=\"interface\">\n                              <img src={Interface} alt=\"interface.png\"/>\n                            </div>\n                          </div>\n                        </div>\n                      </Nav>\n                    </Collapse>\n              </div>\n            </Navbar>\n          </React.Fragment>\n          </div>\n          <div className=\"col-12\">\n            <Label htmlFor=\"announcements\">Add a new announcements</Label>\n          </div>\n          <Col md={{size:15}} className=\"col-sm-12\">\n            <Input type=\"textarea\" rows=\"8\" id=\"announcements\" \n            name=\"Announcements\" \n            value={Announcements} onChange={this.changeHandler}/>\n          </Col>\n        <div className=\"row row-content form-details ml-1\">\n            <div className=\"col-sm-5 col-xl-2 col-12 mt-1\">\n              <Input type=\"date\" placeholder=\"Select a date\" onChange={this.changeHandler} value={Date} name=\"Date\"/>\n            </div>\n            <div className=\"col-sm-5 col-xl-3 col-12 mt-1\">\n              <select className=\"form-control\" onChange={this.changeHandler} value={Notification_Method} name=\"Notification_Method\">\n                <option disabled selected>Notification Method</option>\n                <option value=\"Email\">Email</option>\n                <option value=\"SMS\">Sms</option>\n                <option value=\"Email + SMS\">Email and Sms</option>\n              </select>\n            </div>\n            <Col xl={{size:2}} className=\"mt-1 col-12 col-xl-1 col-sm-5\">\n              <select className=\"form-control\" onChange={this.changeHandler} value={Deliver} name=\"Deliver\">\n                <option disabled selected>Deliver</option>\n                <option value=\"School Level\">School Wide</option>\n                <option value=\"Grade Level\">Grade Level</option>\n                <option value=\"Classroom\">Classroom</option>\n                <option value=\"CourseWide\">CourseWide</option>\n              </select>\n            </Col>\n            <div className=\"col-xl-2 col-sm-5 mt-1\">\n              <select className=\"form-control\" onChange={this.changeHandler} value={Priority} name=\"Priority\">\n              <option disabled selected>Priority</option>\n                <option value=\"Urgent\">Urgent</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Normal\">Normal</option>\n              </select>\n            </div>\n            <div className=\"button col-xl col-md-4 col-sm-6\">\n              <Button type=\"submit\" className=\"fa fa-plus-circle btn-lg mb-1\" onClick={this.clearAll}> Add Announcements</Button>\n            </div>\n        </div>\n        </form>\n        <div className=\"upcoming\">\n          <Upcoming tabs={['Upcoming','Past']} selected={this.state.selected} setSelected={this.setSelected}>\n          <div className=\"upcometabs container\">\n              <div className=\"col-12 col-sm-12 input\">\n                  <i className=\"fa fa-search\" ></i>\n                  <Input type=\"text\" id=\"input\" placeholder=\"Search for an announcements\" name=\"search\" value={search} \n                  onChange={this.changeSearch}/>\n              </div>\n            <Tab isSelected={this.state.selected==='Upcoming'}>\n                  <div className=\"announcement\">\n                      {\n                          filteredSearch.map(id=>\n                          <div className='row row-content each-announcement'> \n                            <div className='col-12 col-sm-3 starts'>\n                              <p className={`pills bold ${id.Priority || \"\"}`}>{id.Priority}</p>\n                              <p style={{color:'#707884'}}>{id.Passage}</p>\n                            </div>\n                            {\n                              this.state.editAnnouncements===id.id ? \n                                (<Col md={{size:15}} className=\"col-sm-12\">\n                              <Input type=\"textarea\" rows=\"8\" id=\"editAnnouncementsText\" \n                              name=\"editAnnouncementsText\" \n                              value={this.state.editAnnouncementsText} onChange={this.changeHandler}/>\n                            </Col>):\n                            (\n\n                                  <div className=\"col-sm-6 col-xl-7 col-12\">\n                                      <p style={{fontWeight:'550'}}>{id.Heading}</p>\n                                      <p style={{fontSize:'14px'}}>{id.Announcements}</p>\n                                      <p style={{color:'#575DA6',fontSize:'14px'}}>{id.Date}</p>\n                                  </div>\n                            )\n                            }\n                            <div className=\"row col-xl-2 col-sm-3\">\n                                {\n                                  this.state.editAnnouncements===id.id ? (\n                                    <div className=\" edit col-6\">\n                                      <i className=\"fa fa-paper-plane\" onClick={()=>this.setEditAnnouncementsText(id.id)}></i>\n                                    </div>\n                                  ):(\n                                    <div className=\" edit col-6\">\n                                      <i className=\"fa fa-edit\" onClick={()=>this.setEditAnnouncements(id.id)}></i>\n                                    </div>\n                                  )\n                                }\n                                  <div className=\" delete col-6\">\n                                    <i className=\"fa fa-trash-o\" onClick={()=>this.deleteAnnouncement(id)}></i>\n                                  </div>\n                            </div>\n                      </div>)}\n                  </div>\n            </Tab>\n            </div>\n            <Tab isSelected={this.state.selected==='Past'}>\n            <div className=\"upcometabs container\">\n              <div className=\"announcement\">\n                <div className='row row-content each-announcement'> \n                <div className='col-12 col-sm-3 starts'>\n                    <p className=\"pills bold NORMAL\">Normal</p>\n                    <p>Email</p>\n                </div>\n                <div className=\"col-sm-6 col-12\">\n                    <p style={{fontWeight:'550'}}>Books Purchases</p>\n                    <p>All books are to be purchased at the bookshop and receipts should be kept for each purchase</p>\n                    <p style={{color:'#575DA6'}}>25 December 2020 - 3:30 PM</p>\n                </div>\n                <div className=\"col-sm-1 ml-3 edit col-5\">\n                <i className=\"fa fa-edit\"></i>\n                </div>\n                <div className=\"col-sm-1 ml-3 delete col-5\">\n                  <i className=\"fa fa-trash-o\"></i>\n                </div>\n              </div>\n              </div>\n            </div>\n            </Tab>\n          </Upcoming>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\reportWebVitals.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\upcoming.js",["56"],"import React from 'react';\r\nclass Upcoming extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"tabs\">\r\n                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                    {\r\n                        this.props.tabs.map(tab=>{\r\n                            \r\n                            const active=(tab===this.props.selected ? 'active' : \" \");\r\n                            return(\r\n                                <li className=\"nav-item\" key={tab}>\r\n                                    <a className={active} onClick={()=>this.props.setSelected(tab)}>{tab}</a>\r\n                                </li>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n                {this.props.children}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Upcoming;","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\sample.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\Tab.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\REACT\\decagon_tasks\\announcement\\src\\baseUrl.js",[],{"ruleId":"57","severity":1,"message":"58","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"57","severity":1,"message":"65","line":3,"column":48,"nodeType":"59","messageId":"60","endLine":3,"endColumn":55},{"ruleId":"57","severity":1,"message":"66","line":3,"column":57,"nodeType":"59","messageId":"60","endLine":3,"endColumn":66},{"ruleId":"57","severity":1,"message":"67","line":3,"column":67,"nodeType":"59","messageId":"60","endLine":3,"endColumn":72},{"ruleId":"57","severity":1,"message":"68","line":11,"column":8,"nodeType":"59","messageId":"60","endLine":11,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":40,"column":55,"nodeType":"71","messageId":"72","endLine":40,"endColumn":57},{"ruleId":"57","severity":1,"message":"73","line":70,"column":11,"nodeType":"59","messageId":"60","endLine":70,"endColumn":14},{"ruleId":"57","severity":1,"message":"74","line":152,"column":9,"nodeType":"59","messageId":"60","endLine":152,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":13,"column":37,"nodeType":"77","endLine":13,"endColumn":101},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'NavItem' is defined but never used.","'Jumbotron' is defined but never used.","'Modal' is defined but never used.","'axios' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'wht' is assigned a value but never used.","'dateDay' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]